
*****
Foi bem difícil completar esse teste pois o desafio é feito com o Java como linguagem principal,
e o Java, ao contrário do JavaScript, possui o tipo de dados 'double'. Toda vez que submetia a
resposta ele até ficava como correto no teste geral, mas falhava no teste oculto,
porque a variável 'double' seria impressa no console como um número inteiro e não decimal. Da
forma que fizemos deu certo, utilizando o parseFloat() e o toFixed() para utilizar corretamente
as casas decimais.
*****


Objective
Today, we're discussing data types. Check out the Tutorial tab for learning materials and an instructional video!

*** Objetivo
*** Hoje, estamos discutindo os tipos de dados. Confira a guia Tutorial para materiais de aprendizagem e um vídeo
de instrução!

Task
Complete the code in the editor below. The variables i, d, and s are already declared and initialized for you. 
You must:

*** Tarefa
*** Complete o código no editor abaixo. As variáveis ​​i, d e s já foram declaradas e inicializadas para você.
Você deve:

1. Declare 3 variables: one of type int, one of type double, and one of type String.
2. Read 3 lines of input from stdin (according to the sequence given in the Input Format section below) and 
initialize your 3 variables.
3. Use the i operator to perform the following operations:
    3.1. Print the sum of i plus your int variable on a new line.
    3.2. Print the sum of d plus your double variable to a scale of one decimal place on a new line.
    3.3. Concatenate s with the string you read as input and print the result on a new line.

*** 1. Declare 3 variáveis: uma do tipo int, uma do tipo double e uma do tipo String.
*** 2. Leia 3 linhas de entrada de stdin (de acordo com a sequência fornecida na seção Formato de entrada
abaixo) e inicialize suas 3 variáveis.
*** 3. Use o operador i para realizar as seguintes operações:
    3.1. Imprima a soma de i mais sua variável int em uma nova linha.
    3.2. Imprima a soma de d mais sua variável dobro em uma escala de uma casa decimal em uma nova linha.
    3.3. Concatene s com a string que você leu como entrada e imprima o resultado em uma nova linha.

Note: If you are using a language that doesn't support using + for string concatenation (e.g.: C), 
you can just print one variable immediately following the other on the same line. The string provided in
your editor must be printed first, immediately followed by the string you read as input.

*** Observação: se você estiver usando uma linguagem que não suporta o uso de + para concatenação de
strings (por exemplo: C), você pode apenas imprimir uma variável imediatamente após a outra na mesma linha.
A string fornecida em seu editor deve ser impressa primeiro, seguido imediatamente pela string que você
leu como entrada.

Input Format
The first line contains an integer that you must sum with i.
The second line contains a double that you must sum with d.
The third line contains a string that you must concatenate with s.

*** Formato de entrada
    A primeira linha contém um inteiro que você deve somar com i.
    A segunda linha contém um dobro que você deve somar com d.
    A terceira linha contém uma string que você deve concatenar com s.

Output Format
Print the sum of both integers on the first line, the sum of both doubles (scaled to 1 decimal place) on
the second line, and then the two concatenated strings on the third line.

*** Formato de saída
    Imprime a soma de ambos os inteiros na primeira linha, a soma de ambos os dobros (na escala de 1 casa
    decimal) na segunda linha e, em seguida, as duas strings concatenadas na terceira linha.

Sample Input
12
4.0
is the best place to learn and practice coding!

*** Formato de entrada
12
4.0
is the best place to learn and practice coding!

Sample Output
16
8.0
HackerRank is the best place to learn and practice coding!

*** Formato de saída
16
8.0
HackerRank is the best place to learn and practice coding!

Explanation
When we sum the integers 4 and 12, we get the integer 16.
When we sum the floating-point numbers 4.0 and 4.0, we get 8.0.
When we concatenate HackerRank with is the best place to learn and practice coding!, we get 
HackerRank is the best place to learn and practice coding!

*** Explicação
Quando somamos os inteiros 4 e 12, obtemos o inteiro 16.
Quando somamos os números floats 4.0 e 4.0, obtemos 8.0.
Quando concatenamos o HackerRank com é o melhor lugar para aprender e praticar a codificação !, obtemos
HackerRank é o melhor lugar para aprender e praticar codificação!

You will not pass this challenge if you attempt to assign the Sample Case values to your variables instead
of following the instructions above and reading input from stdin.

*** Você não passará neste desafio se tentar atribuir os valores do Modelo às suas variáveis
*** de seguir as instruções acima e ler a entrada de stdin.