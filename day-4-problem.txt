
Objective
In this challenge, we're going to learn about the difference between a class
and an instance; because this is an Object Oriented concept, it's only enabled
in certain languages. Check out the Tutorial tab for learning materials and an
instructional video!

**** Objetivo
**** Neste desafio, vamos aprender sobre a diferença entre uma classe
e uma instância; porque este é um conceito orientado a objetos, ele só está habilitado
em certas linguagens. Confira o Tutorial para materiais de aprendizagem e um
vídeo instrutivo!

Task
Write a Person class with an instance variable, age, and a constructor that takes
an integer, initialAge, as a parameter. The constructor must assign initialAge to afe after
confirming the argument passed as initialAge is not negative; if a negative argument is
passed as initialAge, the constructor should set age to 0 and print "Age is not valid", 
setting age to 0.."
In addition, you must write the following instance methods:

**** Tarefa
**** Escreva uma classe Person com uma variável de instância, age, e um construtor que leva
a um inteiro, initialAge, como parâmetro. O construtor deve atribuir initialAge a age após
confirmar o argumento passado como initialAge não-negativo; se um argumento negativo é
passado como initialAge, o construtor deve definir age como 0 e imprimir "Age is not valid", 
setting age to 0.."
Além disso, você deve escrever os seguintes métodos de instância:


1. yearPasses() should increase the age instance variable by 1.
2. amIOld() should perform the following conditional actions:
    * If age < 13, print "You are young.."
    * If age >= 13 and age < 18, print "You are a teenager.."
    * Otherwise, print "You are old.."

**** 1. yearPasses() deve dar um incremento a variável de instância age em 1.
**** 2. amIOld() deve realizar as seguintes ações condicionais:
    * Se age < 13, imprima "You are young.."
    * Se age >= 13 e age < 18, imprima "You are a teenager.."
    * Caso contrário, imprima "You are old.."

To help you learn by example and complete this challenge, much of the code is
provided for you, but you'll be writing everything in the future. The code that
creates each instance of your Person class is in the main method. Don't worry if
you don't understand it all quite yet!

**** Para ajudá-lo a aprender pelo exemplo e completar este desafio, muito do código é
fornecido para você, mas você escreverá tudo no futuro. O código que
cria cada instância de sua classe Person no método principal. Não se preocupe se
você ainda não entendeu tudo!

Note: Do not remove or alter the stub code in the editor.

**** Nota: Não remova ou altere o código stub no editor.

Input Format
Input is handled for you by the stub code in the editor.

**** Formato de entrada
**** A entrada é tratada para você pelo código de stub no editor.

The first line contains an integer, T (the number of test cases), and the T subsequent
lines each contain an integer denoting the age of a Person instance.

**** A primeira linha contém um inteiro, T (o número de casos de teste) e o T subsequente
em cada linha contém um número inteiro denotando a age de uma instância de Person.

Constraints 
**** Restrições:
1 <= T <= 4
-5 <= age <= 30

Output Format
Complete the method definitions provided in the editor so they meet the
specifications outlined above; the code to test your work is already in the editor.
If your methods are implemented correctly, each test case will print 2 or 3 lines
(depending on whether or not a valid initalAge was passed to the constructor).

**** Formato de saída
**** Complete as definições do método fornecidas no editor para que atendam as
especificações descritas acima; o código para testar seu trabalho já está no editor.
Se seus métodos forem implementados corretamente, cada caso de teste imprimirá 2 ou 3 linhas
(dependendo se um initalAge válido foi ou não passado para o construtor).

Sample Input

4
-1
10
16
18

Sample Output

Age is not valid, setting age to 0.
You are young.
You are young.

You are young.
You are a teenager.

You are a teenager.
You are old.

You are old.
You are old.


Explanation
(Explicação)

Test Case 0: initalAge = -1
Because initialAge < 0, our code must set age to 0 and print the "Age is not valid..." 
message followed by the young message. Three years pass and age = 3, so we print the young
message again.
**** Como initialAge < 0, nosso código deve definir age como 0 e imprimir a mensagem "Age is not valid..." 
seguida por "young message". Três anos se passam e age = 3, então imprimimos a "young message"
mensagem novamente.

Test Case 1: initialAge = 10
Because initialAge < 13, our code should print that the person is young. Three years pass
and age = 13, so we print that the person is now a teenager.
**** Como initialAge < 13, nosso código deve imprimir que a pessoa é jovem. Três anos se passam
e idade = 13 anos, então imprimimos que a pessoa agora é um adolescente.

Test Case 2: initialAge = 16
Because 13 <= initialAge < 18, our code should print that the person is a teenager. 
Three years pass and age = 19, so we print that the person is old.
**** Como 13 <= initialAge < 18, nosso código deve imprimir que a pessoa é um adolescente.
Três anos se passam e age = 19, então nós imprimimos que a pessoa é "old".

Test Case 3: initialAge = 18
Because initialAge >= 18, our code should print that the person is old. Three years pass
and the person is still old at age = 21, so we print the old message again.
**** Como initialAge >= 18, nosso código deve imprimir que a pessoa é old. Três anos se passam
e a pessoa continua velho com age = 21, então nós imprimimos a "old message" novamente.

The extra line at the end of the output is supposed to be there and is trimmed before
being compared against the test case's expected output. If you're failing this
challenge, check your logic and review your print statements for spelling errors.

**** A linha extra no final da saída deve estar lá e é cortada antes sendo comparada
com a saída esperada do caso de teste. Se você está falhando nesse desafio, verifique
sua lógica e analise suas declarações de impressão para erros de ortografia.



